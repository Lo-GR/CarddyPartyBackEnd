// <auto-generated />
using CarddyPartyBackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarddyPartyBackEnd.Migrations
{
    [DbContext(typeof(CarddyPartyBackEndContext))]
    partial class CarddyPartyBackEndContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("PlayerID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CardId = 1,
                            Answer = "Card One",
                            PlayerID = 1
                        },
                        new
                        {
                            CardId = 2,
                            Answer = "Card Two",
                            PlayerID = 2
                        },
                        new
                        {
                            CardId = 3,
                            Answer = "Card Three",
                            PlayerID = 1
                        },
                        new
                        {
                            CardId = 4,
                            Answer = "Card Four",
                            PlayerID = 2
                        },
                        new
                        {
                            CardId = 5,
                            Answer = "Card Five",
                            PlayerID = 1
                        },
                        new
                        {
                            CardId = 6,
                            Answer = "Card Six",
                            PlayerID = 2
                        },
                        new
                        {
                            CardId = 7,
                            Answer = "Card Seven",
                            PlayerID = 1
                        },
                        new
                        {
                            CardId = 8,
                            Answer = "Card Eight",
                            PlayerID = 2
                        },
                        new
                        {
                            CardId = 9,
                            Answer = "Card Nine",
                            PlayerID = 1
                        },
                        new
                        {
                            CardId = 10,
                            Answer = "Card Ten",
                            PlayerID = 2
                        });
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerID = 1,
                            Name = "P1",
                            Points = 0
                        },
                        new
                        {
                            PlayerID = 2,
                            Name = "P2",
                            Points = 0
                        },
                        new
                        {
                            PlayerID = 3,
                            Name = "P3",
                            Points = 0
                        },
                        new
                        {
                            PlayerID = 4,
                            Name = "P4",
                            Points = 0
                        });
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Prompt", b =>
                {
                    b.Property<int>("PromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Theme")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PromptId");

                    b.ToTable("Prompts");

                    b.HasData(
                        new
                        {
                            PromptId = 1,
                            Description = "Who was the best President?",
                            Theme = "politics"
                        },
                        new
                        {
                            PromptId = 2,
                            Description = "Why did the cat cross the road?",
                            Theme = "jokes"
                        },
                        new
                        {
                            PromptId = 3,
                            Description = "The unintentional best thing about Epicodus",
                            Theme = "epicodus"
                        },
                        new
                        {
                            PromptId = 4,
                            Description = "Who had the worst scandal?",
                            Theme = "politics"
                        },
                        new
                        {
                            PromptId = 5,
                            Description = "Why did my dad leave me?",
                            Theme = "jokes"
                        },
                        new
                        {
                            PromptId = 6,
                            Description = "Epicodus is terrible at",
                            Theme = "epicodus"
                        });
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Select", b =>
                {
                    b.Property<int>("SelectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Player1Card")
                        .HasColumnType("int");

                    b.Property<int>("Player2Card")
                        .HasColumnType("int");

                    b.Property<int>("Player3Card")
                        .HasColumnType("int");

                    b.Property<int>("Player4Card")
                        .HasColumnType("int");

                    b.HasKey("SelectId");

                    b.ToTable("Selects");

                    b.HasData(
                        new
                        {
                            SelectId = 1,
                            Player1Card = 5,
                            Player2Card = 4,
                            Player3Card = 8,
                            Player4Card = 3
                        });
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Card", b =>
                {
                    b.HasOne("CarddyPartyBackEnd.Models.Player", null)
                        .WithMany("Cards")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Player", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
