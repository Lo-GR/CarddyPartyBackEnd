// <auto-generated />
using System;
using CarddyPartyBackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarddyPartyBackEnd.Migrations
{
    [DbContext(typeof(CarddyPartyBackEndContext))]
    partial class CarddyPartyBackEndContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("PlayerID");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CardId = 1,
                            Answer = "Card One"
                        },
                        new
                        {
                            CardId = 2,
                            Answer = "Card Two"
                        },
                        new
                        {
                            CardId = 3,
                            Answer = "Card Three"
                        },
                        new
                        {
                            CardId = 4,
                            Answer = "Card Four"
                        },
                        new
                        {
                            CardId = 5,
                            Answer = "Card Five"
                        },
                        new
                        {
                            CardId = 6,
                            Answer = "Card Six"
                        },
                        new
                        {
                            CardId = 7,
                            Answer = "Card Seven"
                        },
                        new
                        {
                            CardId = 8,
                            Answer = "Card Eight"
                        },
                        new
                        {
                            CardId = 9,
                            Answer = "Card Nine"
                        },
                        new
                        {
                            CardId = 10,
                            Answer = "Card Ten"
                        });
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Prompt", b =>
                {
                    b.Property<int>("PromptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Desciprtion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PromptId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Card", b =>
                {
                    b.HasOne("CarddyPartyBackEnd.Models.Player", "player")
                        .WithMany("Cards")
                        .HasForeignKey("PlayerID");

                    b.Navigation("player");
                });

            modelBuilder.Entity("CarddyPartyBackEnd.Models.Player", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
